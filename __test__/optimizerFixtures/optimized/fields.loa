use Loa.Core.Int

public class X {
  public abstractField: Int
  public concreteField: Int = 123
  public inferredField: Int = 123
  public computedField: Int {
    return 123
  }
  public inferredComputedField: Int {
    return 123
  }

  public const constant: Int = 123
  public const typedConstant: Int = 123

  public delegate abstractDelegate: Int
  public delegate concreteDelegate: Int = 123
  public delegate inferredDelegate: Int = 123

  public abstractFuncField: () -> Int
  public concreteFuncField: () -> Int = () -> Int {
    return 123
  }
  public inferredFuncField: () -> Int = () -> Int {
    return 123
  }

  public abstractMethod: () -> Int
  public concreteMethod: () -> Int = () -> Int {
    return 123
  }
  public inferredMethod: () -> Int = () -> Int {
    return 123
  }

  public static abstractStaticMethod: () -> Int
  public static concreteStaticMethod: () -> Int = () -> Int {
    return 123
  }
  public static inferredStaticMethod: () -> Int = () -> Int {
    return 123
  }
}
